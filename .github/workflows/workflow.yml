name: Deployment CI/CD

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ steps.set_commit_sha.outputs.commit_sha }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: nyxordinal/plutus-be

      - name: Get commit SHA
        id: vars
        run: echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Set output commit SHA
        id: set_commit_sha
        run: echo "::set-output name=commit_sha::${{ env.COMMIT_SHA }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            nyxordinal/plutus-be:${{ env.COMMIT_SHA }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NEW_RELIC_AGENT_VERSION=${{ secrets.NEW_RELIC_AGENT_VERSION }}
            NEW_RELIC_LICENSE_KEY=${{ secrets.NEW_RELIC_LICENSE_KEY }}
            NEW_RELIC_APPNAME=${{ secrets.NEW_RELIC_APPNAME }}
            NEW_RELIC_DAEMON_ADDRESS=${{ secrets.NEW_RELIC_DAEMON_ADDRESS }}
  deploy:
    name: Deploy
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Deployment Webhook
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://webhook.nyxordinal.dev/deploy"
          method: "POST"
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"app": "plutus", "token": "${{ secrets.DEPLOY_TOKEN }}", "commit_sha": "${{ needs.build_and_push.outputs.commit_sha }}"}'
